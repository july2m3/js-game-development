{"version":3,"sources":["SpriteAnimations/minotaur.png","Hex-TileMap/borderless.png","SpriteAnimations/App.tsx","Run-And-Jump-Example/Rectangle.ts","Run-And-Jump-Example/Controller.ts","Run-And-Jump-Example/App.tsx","Collision-Detection/Rectangle.ts","Collision-Detection/App.tsx","Tilemap/App.tsx","SpriteAnimations/Sprite.ts","Hex-TileMap/App.tsx","Main.tsx","index.tsx"],"names":["module","exports","fpsInterval","now","then","elapsed","Rectangle","height","width","x","y","xVelocity","yVelocity","jumping","move","border","this","Controller","left","right","up","keyListen","event","keyState","type","keyCode","App","props","myCanvas","rectangle","controller","clearScreen","current","getContext","clearRect","drawRect","ctx","fillStyle","beginPath","rect","fill","gameLoop","window","requestAnimationFrame","setupCanvas","style","background","innerHeight","innerWidth","React","createRef","document","addEventListener","className","ref","Component","color","draw","testCollision","top","bottom","rectanglePlayer","rectangleEnemy","mouseX","mouseY","cursorMove","e","getBoundingClientRect","clientX","clientY","passive","buffer","createElement","myName","canvas","drawMap","resize","getRandomColor","Math","floor","random","toString","i","length","fillRect","drawImage","Sprite","imageSource","spriteWidth","spriteHeight","maxFrames","currentFrame","image","drawStrip","scale","Image","src","mySprite","Date","Minotaur","bufferBackground","grid","mouseMove","state","scaleX","scaleY","setState","setupGridOfTiles","drawHexTiles","tile","frames","gridImage","xPoint","sizeOfTiles","yPoint","sqrt","gridCoordinate","xCoordinate","yCoordinate","tileFrameX","tileFrameY","prevState","gridCoordinates","drawGridFromCoordinates","currentTile","isMouseOnTile","setupGame","querySelector","backgroundColor","fps","fantasyTiles","Main","showMap","map","currentOption","optionPicked","showOptions","refreshPage","location","reload","onClick","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e04431ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/minotaur.528c6775.png\";","module.exports = __webpack_public_path__ + \"static/media/borderless.b3f0e1f5.png\";","/* eslint-disable import/no-unresolved */\n/* eslint-disable import/extensions */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\n\nimport Minotaur from './minotaur.png'; // 93 x 100\nimport '../style.css';\n\nimport Sprite from './Sprite';\n\nconst fps = 5;\nlet startTime;\nlet fpsInterval: any;\nlet now: any;\nlet then: any;\nlet elapsed: any;\n\nclass App extends React.Component {\n  myCanvas: any;\n\n  mySprite: Sprite;\n\n  constructor(props: any) {\n    super(props);\n    this.myCanvas = React.createRef();\n    this.mySprite = new Sprite(Minotaur, 93, 100, 5);\n  }\n\n  componentDidMount() {\n    this.setupCanvas();\n    fpsInterval = 1000 / fps;\n    then = Date.now();\n    startTime = then;\n    this.gameLoop();\n  }\n\n  gameLoop = () => {\n    window.requestAnimationFrame(this.gameLoop);\n\n    // calc elapsed time since last loop\n    now = Date.now();\n    elapsed = now - then;\n\n    // if enough time has elapsed, draw the next frame\n    if (elapsed > fpsInterval) {\n      this.mySprite.drawStrip(\n        this.myCanvas.current.getContext('2d'),\n        200,\n        100,\n        200,\n      );\n\n      // Get ready for next frame by setting then=now, but also adjust for your\n      // specified fpsInterval not being a multiple of RAF's interval (16.7ms)\n      then = now - (elapsed % fpsInterval);\n    }\n  };\n\n  setupCanvas = () => {\n    this.myCanvas.current.style.background = 'white';\n    this.myCanvas.current.height = window.innerHeight * 0.7;\n    this.myCanvas.current.width = window.innerWidth * 0.7;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Game Development</h1>\n        <h2>Example</h2>\n        <canvas ref={this.myCanvas} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default class Rectangle {\n  height: number;\n\n  width: number;\n\n  x: number;\n\n  y: number;\n\n  xVelocity: number;\n\n  yVelocity: number;\n\n  jumping: boolean;\n\n  constructor(height: number, width: number, x: number, y: number) {\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this.xVelocity = 0;\n    this.yVelocity = 0;\n    this.jumping = false;\n  }\n\n  move = (border: number) => {\n    this.x += this.xVelocity;\n    this.xVelocity += 0.5;\n    if (this.x >= border) {\n      this.x = -this.width;\n      this.xVelocity = 1;\n    }\n  };\n}\n","export default class Controller {\n  left: boolean;\n\n  right: boolean;\n\n  up: boolean;\n\n  constructor() {\n    this.left = false;\n    this.right = false;\n    this.up = false;\n  }\n\n  keyListen = (event: any) => {\n    const keyState = event.type === 'keydown';\n\n    switch (event.keyCode) {\n      case 37:\n        this.left = keyState;\n        break;\n      case 32:\n      case 38:\n        this.up = keyState;\n        break;\n      case 39:\n        this.right = keyState;\n        break;\n      default:\n        break;\n    }\n  };\n}\n","/* eslint-disable import/no-unresolved */\n/* eslint-disable import/extensions */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\n\nimport '../style.css';\nimport Rectangle from './Rectangle';\nimport Controller from './Controller';\n\nclass App extends React.Component {\n  myCanvas: any;\n\n  rectangle: Rectangle;\n\n  controller: Controller;\n\n  constructor(props: any) {\n    super(props);\n    this.myCanvas = React.createRef();\n    this.rectangle = new Rectangle(32, 32, 100, 400);\n    this.controller = new Controller();\n  }\n\n  componentDidMount() {\n    this.setupCanvas();\n    this.gameLoop();\n    document.addEventListener('keydown', this.controller.keyListen);\n    document.addEventListener('keyup', this.controller.keyListen);\n  }\n\n  clearScreen = () => {\n    const ctx = this.myCanvas.current.getContext('2d');\n    ctx.clearRect(\n      0,\n      0,\n      this.myCanvas.current.width,\n      this.myCanvas.current.height,\n    );\n  };\n\n  drawRect = () => {\n    const ctx = this.myCanvas.current.getContext('2d');\n    ctx.fillStyle = 'red';\n    ctx.beginPath();\n    ctx.rect(\n      this.rectangle.x,\n      this.rectangle.y,\n      this.rectangle.width,\n      this.rectangle.height,\n    );\n    ctx.fill();\n  };\n\n  gameLoop = () => {\n    this.clearScreen();\n    this.drawRect();\n\n    if (this.controller.up && this.rectangle.jumping === false) {\n      this.rectangle.yVelocity -= 20;\n      this.rectangle.jumping = true;\n    }\n\n    if (this.controller.left) {\n      this.rectangle.xVelocity -= 0.5;\n    }\n\n    if (this.controller.right) {\n      this.rectangle.xVelocity += 0.5;\n    }\n\n    //  gravity\n    this.rectangle.yVelocity += 1.5;\n\n    this.rectangle.x += this.rectangle.xVelocity;\n    this.rectangle.y += this.rectangle.yVelocity;\n\n    //  add friction to make rectangle eventually stop\n    this.rectangle.xVelocity *= 0.9;\n    this.rectangle.yVelocity *= 0.9;\n\n    //  if rectangle floors below floor\n    if (this.rectangle.y >= this.myCanvas.current.height - 64) {\n      this.rectangle.jumping = false;\n      // this.rectangle.y = 180 - 16 - 32;\n      this.rectangle.y = this.myCanvas.current.height - 64;\n      this.rectangle.yVelocity = 0;\n    }\n\n    //  if rectangle reaches left edge of screen, reset\n    if (this.rectangle.x <= -this.rectangle.width) {\n      this.rectangle.x = this.myCanvas.current.width - this.rectangle.width;\n    }\n\n    //  if rectangle reaches right edge of screen, reset\n    if (this.rectangle.x >= this.myCanvas.current.width) {\n      this.rectangle.x = -this.rectangle.width;\n    }\n\n    window.requestAnimationFrame(this.gameLoop);\n  };\n\n  setupCanvas = () => {\n    this.myCanvas.current.style.background = 'white';\n    this.myCanvas.current.height = window.innerHeight * 0.7;\n    this.myCanvas.current.width = window.innerWidth * 0.7;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Game Development</h1>\n        <h2>Run and Jump Example</h2>\n        <canvas ref={this.myCanvas} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default class Rectangle {\n  height: number;\n\n  width: number;\n\n  x: number;\n\n  y: number;\n\n  color: string;\n\n  constructor(\n    height: number,\n    width: number,\n    x: number,\n    y: number,\n    color: string,\n  ) {\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this.color = color;\n  }\n\n  get bottom() {\n    return this.y + this.height;\n  }\n\n  get left() {\n    return this.x;\n  }\n\n  get right() {\n    return this.x + this.width;\n  }\n\n  get top() {\n    return this.y;\n  }\n\n  draw = (ctx: any) => {\n    ctx.beginPath();\n    ctx.rect(this.x, this.y, this.width, this.height);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n  };\n\n  testCollision = (rectangle: Rectangle) => {\n    if (\n      this.top > rectangle.bottom ||\n      this.right < rectangle.left ||\n      this.bottom < rectangle.top ||\n      this.left > rectangle.right\n    ) {\n      return false;\n    }\n    return true;\n  };\n}\n","/* eslint-disable react/no-unused-state */\n/* eslint-disable import/no-unresolved */\n/* eslint-disable import/extensions */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\n\nimport '../style.css';\nimport Rectangle from './Rectangle';\n\nconst squareSize = 64;\n\nclass App extends React.Component {\n  myCanvas: any;\n\n  rectanglePlayer: Rectangle;\n\n  rectangleEnemy: Rectangle;\n\n  mouseX: number;\n\n  mouseY: number;\n\n  constructor(props: any) {\n    super(props);\n    this.myCanvas = React.createRef();\n    this.rectanglePlayer = new Rectangle(\n      squareSize,\n      squareSize,\n      100,\n      100,\n      '#0088ff',\n    );\n    this.rectangleEnemy = new Rectangle(\n      squareSize,\n      squareSize,\n      200,\n      200,\n      'red',\n    );\n    this.mouseX = 100;\n    this.mouseY = 100;\n  }\n\n  componentDidMount() {\n    this.setupCanvas();\n    this.gameLoop();\n    this.myCanvas.current.addEventListener('mousemove', this.cursorMove);\n    this.myCanvas.current.addEventListener('touchmove', this.cursorMove, {\n      passive: true,\n    });\n  }\n\n  clearScreen = () => {\n    const ctx = this.myCanvas.current.getContext('2d');\n    ctx.clearRect(\n      0,\n      0,\n      this.myCanvas.current.width,\n      this.myCanvas.current.height,\n    );\n  };\n\n  cursorMove = (e: any) => {\n    const rectangle = this.myCanvas.current.getBoundingClientRect();\n    this.mouseX = e.clientX - rectangle.left;\n    this.mouseY = e.clientY - rectangle.top;\n  };\n\n  gameLoop = () => {\n    this.clearScreen();\n\n    this.rectanglePlayer.x = this.mouseX - this.rectanglePlayer.width / 2;\n    this.rectanglePlayer.y = this.mouseY - this.rectanglePlayer.height / 2;\n\n    this.rectanglePlayer.draw(this.myCanvas.current.getContext('2d'));\n    this.rectangleEnemy.draw(this.myCanvas.current.getContext('2d'));\n\n    if (this.rectanglePlayer.testCollision(this.rectangleEnemy)) {\n      this.rectanglePlayer.color = 'red';\n    } else {\n      this.rectanglePlayer.color = 'blue';\n    }\n\n    window.requestAnimationFrame(this.gameLoop);\n  };\n\n  setupCanvas = () => {\n    this.myCanvas.current.style.background = 'white';\n    this.myCanvas.current.height = window.innerHeight * 0.7;\n    this.myCanvas.current.width = window.innerWidth * 0.7;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Game Development</h1>\n        <h2>Collision Detection Example</h2>\n        <canvas ref={this.myCanvas} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable import/no-unresolved */\n/* eslint-disable import/extensions */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\n\nimport '../style.css';\n\nconst buffer = document.createElement('canvas').getContext('2d');\nconst size = 32;\nconst columns = 16;\n// const drawMap\n\n// A '16 x 9' array, stored in a 1d format\n// prettier-ignore\nconst myName = \n  [\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n    1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n    0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1,\n    0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1,\n    1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0,\n  ];\n\nclass App extends React.Component {\n  myCanvas: any;\n\n  constructor(props: any) {\n    super(props);\n    this.myCanvas = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setupCanvas();\n    this.gameLoop();\n    window.addEventListener('resize', this.resize, { passive: true });\n  }\n\n  clearScreen = () => {\n    const ctx = this.myCanvas.current.getContext('2d');\n    ctx.clearRect(\n      0,\n      0,\n      this.myCanvas.current.width,\n      this.myCanvas.current.height,\n    );\n  };\n\n  gameLoop = () => {\n    // this.clearScreen();\n\n    window.requestAnimationFrame(this.gameLoop);\n  };\n\n  setupCanvas = () => {\n    buffer!.canvas.height = 9 * size;\n    buffer!.canvas.width = 16 * size;\n    this.myCanvas.current.height = window.innerHeight * 0.7;\n    this.myCanvas.current.width = window.innerWidth * 0.7;\n\n    this.drawMap();\n  };\n\n  // just keeps the canvas element sized appropriately\n  resize = () => {\n    this.myCanvas.current.height = window.innerHeight / 2;\n    this.myCanvas.current.width = window.innerWidth / 2;\n\n    this.drawMap();\n  };\n\n  getRandomColor = () => {\n    return `rgb(${Math.floor(Math.random() * 255).toString()},${Math.floor(\n      Math.random() * 255,\n    ).toString()},${Math.floor(Math.random() * 255).toString()})`;\n  };\n\n  drawMap = () => {\n    const ctx = this.myCanvas.current.getContext('2d');\n    for (let i = 0; i < myName.length; i++) {\n      buffer!.fillStyle = myName[i] === 1 ? this.getRandomColor() : '#000000';\n      buffer!.fillRect(\n        (i % columns) * size,\n        Math.floor(i / columns) * size,\n        size,\n        size,\n      );\n    }\n\n    ctx.drawImage(\n      buffer!.canvas,\n      0,\n      0,\n      buffer!.canvas.width,\n      buffer!.canvas.height,\n      0,\n      0,\n      this.myCanvas.current.width,\n      this.myCanvas.current.height,\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Game Development</h1>\n        <h2>Example</h2>\n        <canvas ref={this.myCanvas} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default class Sprite {\n  currentFrame: number;\n\n  spriteWidth: number;\n\n  spriteHeight: number;\n\n  maxFrames: number;\n\n  image: any;\n\n  constructor(\n    imageSource: string,\n    spriteWidth: number,\n    spriteHeight: number,\n    maxFrames: number,\n  ) {\n    this.currentFrame = 0;\n    this.maxFrames = maxFrames;\n    this.spriteWidth = spriteWidth;\n    this.spriteHeight = spriteHeight;\n    this.image = new Image(spriteWidth, spriteHeight);\n    this.image.src = imageSource;\n  }\n\n  drawStrip = (ctx: any, x: number, y: number, scale = 200) => {\n    ctx.clearRect(x, y, this.image.width * 2, this.image.height * 1.4);\n    ctx.drawImage(\n      this.image,\n      this.image.width * this.currentFrame,\n      0,\n      this.image.width,\n      this.image.height,\n      x - this.currentFrame * 7,\n      y,\n      scale,\n      scale,\n    );\n\n    this.currentFrame += 1;\n    if (this.currentFrame >= this.maxFrames) {\n      this.currentFrame = 0;\n    }\n  };\n}\n","/* eslint-disable react/no-unused-state */\n/* eslint-disable lines-between-class-members */\n/* eslint-disable no-plusplus */\n/* eslint-disable import/no-unresolved */\n/* eslint-disable import/extensions */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\n\nimport '../style.css';\n\nimport fantasyTiles from './borderless.png';\n\n// https://www.redblobgames.com/grids/hexagons/\nconst bufferBackground = document.createElement('canvas').getContext('2d');\nconst bufferSize = 32;\n// const bufferColumns = 16;\n\nconst sizeOfTiles = 32;\n\n// 8 x 6 grid\n// prettier-ignore\nconst grid = [\n  [0, 0, 1, 1, 2, 2, 3],\n  [4, 4, 28, 5, 6, 6, 7],\n  [8, 8, 9, 9, 10, 10, 11],\n  [12, 12, 13, 13, 14, 14, 15],\n  [28, 28, 17, 17, 18, 18, 19],\n  [20, 20, 21, 21, 22, 22, 23],\n  [24, 24, 25, 25, 26, 26, 27],\n];\n\n// https://stackoverflow.com/questions/46987816/using-state-in-react-with-typescript\ninterface IProps {}\ninterface IState {\n  gridCoordinates: any[];\n  fps: number;\n  fpsInterval: any;\n  now: any;\n  then: any;\n  elapsed: any;\n  currentTile: any;\n  myCanvas: any;\n  gridImage: any;\n  mouseX: any;\n  mouseY: any;\n}\n\nclass App extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      gridImage: new Image(32, 32),\n      fps: 5,\n      mouseX: 100,\n      mouseY: 100,\n      myCanvas: React.createRef(),\n      fpsInterval: null,\n      gridCoordinates: [],\n      now: Date.now(),\n      then: Date.now(),\n      elapsed: null,\n      currentTile: { x: 100, y: 100 },\n    };\n  }\n\n  componentDidMount({ fps, gridImage } = this.state) {\n    this.setupGame();\n    this.setState({ fpsInterval: 1000 / fps });\n    gridImage.src = fantasyTiles;\n    window.addEventListener('mousemove', this.mouseMove);\n    this.gameLoop();\n  }\n\n  // Remember, element (myCanvas), is different than bitmap bufferBackgroundbuffer)\n  // see: https://stackoverflow.com/questions/17130395/real-mouse-position-in-canvas\n  mouseMove = (e: any, { myCanvas } = this.state) => {\n    const rectangle = myCanvas.current.getBoundingClientRect();\n    const { canvas } = bufferBackground!;\n    const scaleX = canvas.width / rectangle.width;\n    const scaleY = canvas.height / rectangle.height;\n\n    // scale coordinates after they have been adjusted to relative element\n    this.setState(() => ({ mouseX: (e.clientX - rectangle.left) * scaleX }));\n    this.setState(() => ({ mouseY: (e.clientY - rectangle.top) * scaleY }));\n  };\n\n  // resize canvas element when window resizes\n  resize = ({ myCanvas } = this.state) => {\n    myCanvas.current.height = window.innerHeight / 2;\n    myCanvas.current.width = window.innerWidth / 2;\n    this.setupGridOfTiles();\n  };\n\n  drawHexTiles = (\n    x: number,\n    y: number,\n    tile = Math.random() * 7,\n    frames = 8,\n    width = 32,\n    height = 48,\n    { gridImage } = this.state,\n  ) => {\n    bufferBackground!.drawImage(\n      gridImage,\n      width * Math.floor(tile % frames),\n      16 + height * Math.floor(tile / frames),\n      width,\n      width,\n      x,\n      y,\n      sizeOfTiles,\n      sizeOfTiles,\n    );\n  };\n\n  setupGridOfTiles = () => {\n    for (let x = 0; x < grid.length; x++) {\n      for (let y = 0; y < grid[x].length; y++) {\n        const xOffset = y % 2 === 0 ? sizeOfTiles * 0.75 : 0;\n        const xPoint = x * sizeOfTiles * 1.5 + xOffset;\n        const yPoint = (y * (Math.sqrt(3) * sizeOfTiles)) / 4;\n        const gridCoordinate = {\n          xCoordinate: xPoint,\n          yCoordinate: yPoint,\n          tileFrameX: x,\n          tileFrameY: y,\n        };\n\n        this.drawHexTiles(xPoint, yPoint, grid[x][y]);\n\n        this.setState((prevState) => ({\n          gridCoordinates: [...prevState.gridCoordinates, gridCoordinate],\n        }));\n      }\n    }\n  };\n\n  drawGridFromCoordinates = ({ gridCoordinates, currentTile } = this.state) => {\n    for (let i = 0; i < gridCoordinates.length; i++) {\n      const x = gridCoordinates[i].xCoordinate;\n      const y = gridCoordinates[i].yCoordinate;\n\n      // check if mouse is on tile about to be drawn\n      if (currentTile.xCoordinate === x && currentTile.yCoordinate === y) {\n        this.drawHexTiles(x, y, 16);\n      } else if (x && y) {\n        this.drawHexTiles(\n          x,\n          y,\n          grid[gridCoordinates[i].tileFrameX][gridCoordinates[i].tileFrameY],\n        );\n      }\n    }\n  };\n\n  gameLoop = () => {\n    const { fpsInterval, elapsed, myCanvas } = this.state;\n    const ctx = myCanvas.current.getContext('2d');\n    window.requestAnimationFrame(this.gameLoop);\n\n    // calc elapsed time since last loop\n    this.setState(() => ({ now: Date.now() }));\n    this.setState((prevState) => ({ elapsed: prevState.now - prevState.then }));\n\n    // if enough time has elapsed, draw the next frame\n    if (elapsed > fpsInterval) {\n      this.drawGridFromCoordinates();\n      ctx.drawImage(\n        bufferBackground!.canvas,\n        0,\n        0,\n        bufferBackground!.canvas.width,\n        bufferBackground!.canvas.height,\n        0,\n        0,\n        myCanvas.current.width,\n        myCanvas.current.height,\n      );\n      this.isMouseOnTile();\n\n      // Get ready for next frame by setting then=now, but also adjust for your\n      // specified fpsInterval not being a multiple of RAF's interval (16.7ms)\n      this.setState((prevState) => ({\n        then: prevState.now - (prevState.elapsed % prevState.fpsInterval),\n      }));\n    }\n  };\n\n  setupGame = ({ myCanvas } = this.state) => {\n    bufferBackground!.canvas.height = 9 * bufferSize;\n    bufferBackground!.canvas.width = 16 * bufferSize;\n    myCanvas.current.style.background = document.querySelector(\n      'body',\n    )?.style.backgroundColor;\n    myCanvas.current.height = window.innerHeight * 0.7;\n    myCanvas.current.width = window.innerWidth * 0.7;\n\n    this.setupGridOfTiles();\n  };\n\n  isMouseOnTile = (\n    { gridCoordinates, mouseX, mouseY, myCanvas } = this.state,\n  ) => {\n    if (\n      mouseX >= myCanvas.current.width ||\n      mouseX <= 0 ||\n      mouseY >= myCanvas.current.height ||\n      mouseY <= 0\n    ) {\n      return;\n    }\n    for (let i = 0; i < gridCoordinates.length; i++) {\n      if (\n        gridCoordinates[i].xCoordinate < mouseX &&\n        gridCoordinates[i].xCoordinate + sizeOfTiles > mouseX &&\n        gridCoordinates[i].yCoordinate < mouseY &&\n        gridCoordinates[i].yCoordinate + sizeOfTiles > mouseY\n      ) {\n        this.setState(() => ({ currentTile: gridCoordinates[i] }));\n      }\n    }\n  };\n\n  render({ myCanvas } = this.state) {\n    return (\n      <div className=\"App\">\n        <h1>Game Development</h1>\n        <h2>Example</h2>\n        <canvas ref={myCanvas} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable react/no-unused-state */\n/* eslint-disable react/button-has-type */\n/* eslint-disable import/no-unresolved */\n/* eslint-disable import/extensions */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\n\nimport RunAndJump from './Run-And-Jump-Example/App';\nimport Collision from './Collision-Detection/App';\nimport TileMap from './Tilemap/App';\nimport SpriteAnimations from './SpriteAnimations/App';\nimport HexTileMap from './Hex-TileMap/App';\n\nimport './style.css';\n\ntype MyProps = {};\ntype MyState = {\n  currentOption: any;\n  showOptions: boolean;\n};\n\nclass Main extends React.Component<MyProps, MyState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      currentOption: null,\n      showOptions: true,\n    };\n  }\n\n  showMap = (map: any) => {\n    this.setState({ currentOption: map });\n    this.optionPicked();\n  };\n\n  optionPicked = () => {\n    this.setState({ showOptions: false });\n  };\n\n  refreshPage = () => {\n    window.location.reload(false);\n  };\n\n  render({ currentOption, showOptions } = this.state) {\n    return (\n      <div className=\"main\">\n        <div className=\"showcase\">{currentOption}</div>\n        <div className=\"buttons\">\n          {!showOptions && (\n            <button onClick={this.refreshPage}>Reload page</button>\n          )}\n          {showOptions && (\n            <div>\n              <button onClick={() => this.showMap(<RunAndJump />)}>\n                Square with keyboard controls\n              </button>\n\n              <button onClick={() => this.showMap(<Collision />)}>\n                Collision Detection\n              </button>\n\n              <button onClick={() => this.showMap(<TileMap />)}>\n                Simple TileMap\n              </button>\n              <button onClick={() => this.showMap(<SpriteAnimations />)}>\n                Sprite Animation\n              </button>\n\n              <button onClick={() => this.showMap(<HexTileMap />)}>\n                Hex Tile Map\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/no-unresolved */\n/* eslint-disable import/extensions */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport Main from './Main';\n// import App from './Run-And-Jump-Example/App';\n// import App from './Collision-Detection/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}