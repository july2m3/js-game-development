{"version":3,"sources":["Run-And-Jump-Example/Rectangle.ts","Run-And-Jump-Example/Controller.ts","Run-And-Jump-Example/App.tsx","Collision-Detection/Rectangle.ts","Collision-Detection/App.tsx","Tilemap/App.tsx","Main.tsx","index.tsx"],"names":["Rectangle","height","width","x","y","xVelocity","yVelocity","jumping","move","border","this","Controller","left","right","up","keyListen","event","keyState","type","keyCode","App","props","myCanvas","rectangle","controller","clearScreen","current","getContext","clearRect","drawRect","ctx","fillStyle","beginPath","rect","fill","gameLoop","window","requestAnimationFrame","setupCanvas","style","background","innerHeight","innerWidth","React","createRef","document","addEventListener","className","ref","Component","color","draw","testCollision","top","bottom","rectanglePlayer","rectangleEnemy","mouseX","mouseY","cursorMove","e","getBoundingClientRect","clientX","clientY","passive","buffer","createElement","myName","canvas","drawMap","resize","getRandomColor","Math","floor","random","toString","i","length","fillRect","drawImage","Main","showRunAndJump","setState","showOptions","showCollision","blockButtons","showTileMap","refreshPage","location","reload","state","onClick","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.75b5d0d9.chunk.js","sourcesContent":["export default class Rectangle {\n  height: number;\n\n  width: number;\n\n  x: number;\n\n  y: number;\n\n  xVelocity: number;\n\n  yVelocity: number;\n\n  jumping: boolean;\n\n  constructor(height: number, width: number, x: number, y: number) {\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this.xVelocity = 0;\n    this.yVelocity = 0;\n    this.jumping = false;\n  }\n\n  move = (border: number) => {\n    this.x += this.xVelocity;\n    this.xVelocity += 0.5;\n    if (this.x >= border) {\n      this.x = -this.width;\n      this.xVelocity = 1;\n    }\n  };\n}\n","export default class Controller {\n  left: boolean;\n\n  right: boolean;\n\n  up: boolean;\n\n  constructor() {\n    this.left = false;\n    this.right = false;\n    this.up = false;\n  }\n\n  keyListen = (event: any) => {\n    const keyState = event.type === 'keydown';\n\n    switch (event.keyCode) {\n      case 37:\n        this.left = keyState;\n        break;\n      case 32:\n      case 38:\n        this.up = keyState;\n        break;\n      case 39:\n        this.right = keyState;\n        break;\n      default:\n        break;\n    }\n  };\n}\n","/* eslint-disable import/no-unresolved */\n/* eslint-disable import/extensions */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\n\nimport '../style.css';\nimport Rectangle from './Rectangle';\nimport Controller from './Controller';\n\nclass App extends React.Component {\n  myCanvas: any;\n\n  rectangle: Rectangle;\n\n  controller: Controller;\n\n  constructor(props: any) {\n    super(props);\n    this.myCanvas = React.createRef();\n    this.rectangle = new Rectangle(32, 32, 100, 400);\n    this.controller = new Controller();\n  }\n\n  componentDidMount() {\n    this.setupCanvas();\n    this.gameLoop();\n    document.addEventListener('keydown', this.controller.keyListen);\n    document.addEventListener('keyup', this.controller.keyListen);\n  }\n\n  clearScreen = () => {\n    const ctx = this.myCanvas.current.getContext('2d');\n    ctx.clearRect(\n      0,\n      0,\n      this.myCanvas.current.width,\n      this.myCanvas.current.height,\n    );\n  };\n\n  drawRect = () => {\n    const ctx = this.myCanvas.current.getContext('2d');\n    ctx.fillStyle = 'red';\n    ctx.beginPath();\n    ctx.rect(\n      this.rectangle.x,\n      this.rectangle.y,\n      this.rectangle.width,\n      this.rectangle.height,\n    );\n    ctx.fill();\n  };\n\n  gameLoop = () => {\n    this.clearScreen();\n    this.drawRect();\n\n    if (this.controller.up && this.rectangle.jumping === false) {\n      this.rectangle.yVelocity -= 20;\n      this.rectangle.jumping = true;\n    }\n\n    if (this.controller.left) {\n      this.rectangle.xVelocity -= 0.5;\n    }\n\n    if (this.controller.right) {\n      this.rectangle.xVelocity += 0.5;\n    }\n\n    //  gravity\n    this.rectangle.yVelocity += 1.5;\n\n    this.rectangle.x += this.rectangle.xVelocity;\n    this.rectangle.y += this.rectangle.yVelocity;\n\n    //  add friction to make rectangle eventually stop\n    this.rectangle.xVelocity *= 0.9;\n    this.rectangle.yVelocity *= 0.9;\n\n    //  if rectangle floors below floor\n    if (this.rectangle.y >= this.myCanvas.current.height - 64) {\n      this.rectangle.jumping = false;\n      // this.rectangle.y = 180 - 16 - 32;\n      this.rectangle.y = this.myCanvas.current.height - 64;\n      this.rectangle.yVelocity = 0;\n    }\n\n    //  if rectangle reaches left edge of screen, reset\n    if (this.rectangle.x <= -this.rectangle.width) {\n      this.rectangle.x = this.myCanvas.current.width - this.rectangle.width;\n    }\n\n    //  if rectangle reaches right edge of screen, reset\n    if (this.rectangle.x >= this.myCanvas.current.width) {\n      this.rectangle.x = -this.rectangle.width;\n    }\n\n    window.requestAnimationFrame(this.gameLoop);\n  };\n\n  setupCanvas = () => {\n    this.myCanvas.current.style.background = 'white';\n    this.myCanvas.current.height = window.innerHeight / 2;\n    this.myCanvas.current.width = window.innerWidth / 2;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Game Development</h1>\n        <h2>Run and Jump Example</h2>\n        <canvas ref={this.myCanvas} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default class Rectangle {\n  height: number;\n\n  width: number;\n\n  x: number;\n\n  y: number;\n\n  color: string;\n\n  constructor(\n    height: number,\n    width: number,\n    x: number,\n    y: number,\n    color: string,\n  ) {\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this.color = color;\n  }\n\n  get bottom() {\n    return this.y + this.height;\n  }\n\n  get left() {\n    return this.x;\n  }\n\n  get right() {\n    return this.x + this.width;\n  }\n\n  get top() {\n    return this.y;\n  }\n\n  draw = (ctx: any) => {\n    ctx.beginPath();\n    ctx.rect(this.x, this.y, this.width, this.height);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n  };\n\n  testCollision = (rectangle: Rectangle) => {\n    if (\n      this.top > rectangle.bottom ||\n      this.right < rectangle.left ||\n      this.bottom < rectangle.top ||\n      this.left > rectangle.right\n    ) {\n      return false;\n    }\n    return true;\n  };\n}\n","/* eslint-disable react/no-unused-state */\n/* eslint-disable import/no-unresolved */\n/* eslint-disable import/extensions */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\n\nimport '../style.css';\nimport Rectangle from './Rectangle';\n\nconst squareSize = 64;\n\nclass App extends React.Component {\n  myCanvas: any;\n\n  rectanglePlayer: Rectangle;\n\n  rectangleEnemy: Rectangle;\n\n  mouseX: number;\n\n  mouseY: number;\n\n  constructor(props: any) {\n    super(props);\n    this.myCanvas = React.createRef();\n    this.rectanglePlayer = new Rectangle(\n      squareSize,\n      squareSize,\n      100,\n      100,\n      '#0088ff',\n    );\n    this.rectangleEnemy = new Rectangle(\n      squareSize,\n      squareSize,\n      200,\n      200,\n      'red',\n    );\n    this.mouseX = 100;\n    this.mouseY = 100;\n  }\n\n  componentDidMount() {\n    this.setupCanvas();\n    this.gameLoop();\n    this.myCanvas.current.addEventListener('mousemove', this.cursorMove);\n    this.myCanvas.current.addEventListener('touchmove', this.cursorMove, {\n      passive: true,\n    });\n  }\n\n  clearScreen = () => {\n    const ctx = this.myCanvas.current.getContext('2d');\n    ctx.clearRect(\n      0,\n      0,\n      this.myCanvas.current.width,\n      this.myCanvas.current.height,\n    );\n  };\n\n  cursorMove = (e: any) => {\n    const rectangle = this.myCanvas.current.getBoundingClientRect();\n    this.mouseX = e.clientX - rectangle.left;\n    this.mouseY = e.clientY - rectangle.top;\n  };\n\n  gameLoop = () => {\n    this.clearScreen();\n\n    this.rectanglePlayer.x = this.mouseX - this.rectanglePlayer.width / 2;\n    this.rectanglePlayer.y = this.mouseY - this.rectanglePlayer.height / 2;\n\n    this.rectanglePlayer.draw(this.myCanvas.current.getContext('2d'));\n    this.rectangleEnemy.draw(this.myCanvas.current.getContext('2d'));\n\n    if (this.rectanglePlayer.testCollision(this.rectangleEnemy)) {\n      this.rectanglePlayer.color = 'red';\n    } else {\n      this.rectanglePlayer.color = 'blue';\n    }\n\n    window.requestAnimationFrame(this.gameLoop);\n  };\n\n  setupCanvas = () => {\n    this.myCanvas.current.style.background = 'white';\n    this.myCanvas.current.height = window.innerHeight / 2;\n    this.myCanvas.current.width = window.innerWidth / 2;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Game Development</h1>\n        <h2>Collision Detection Example</h2>\n        <canvas ref={this.myCanvas} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable import/no-unresolved */\n/* eslint-disable import/extensions */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\n\nimport '../style.css';\n\nconst buffer = document.createElement('canvas').getContext('2d');\nconst size = 32;\nconst columns = 16;\n// const drawMap\n\n// A '16 x 9' array, stored in a 1d format\n// prettier-ignore\nconst myName = \n  [\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n    1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n    0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1,\n    0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1,\n    1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0,\n  ];\n\nclass App extends React.Component {\n  myCanvas: any;\n\n  constructor(props: any) {\n    super(props);\n    this.myCanvas = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setupCanvas();\n    this.gameLoop();\n    window.addEventListener('resize', this.resize, { passive: true });\n  }\n\n  clearScreen = () => {\n    const ctx = this.myCanvas.current.getContext('2d');\n    ctx.clearRect(\n      0,\n      0,\n      this.myCanvas.current.width,\n      this.myCanvas.current.height,\n    );\n  };\n\n  gameLoop = () => {\n    // this.clearScreen();\n\n    window.requestAnimationFrame(this.gameLoop);\n  };\n\n  setupCanvas = () => {\n    buffer!.canvas.height = 9 * size;\n    buffer!.canvas.width = 16 * size;\n    this.myCanvas.current.height = window.innerHeight / 2;\n    this.myCanvas.current.width = window.innerWidth / 2;\n\n    this.drawMap();\n  };\n\n  // just keeps the canvas element sized appropriately\n  resize = () => {\n    this.myCanvas.current.height = window.innerHeight / 2;\n    this.myCanvas.current.width = window.innerWidth / 2;\n\n    this.drawMap();\n  };\n\n  getRandomColor = () => {\n    return `rgb(${Math.floor(Math.random() * 255).toString()},${Math.floor(\n      Math.random() * 255,\n    ).toString()},${Math.floor(Math.random() * 255).toString()})`;\n  };\n\n  drawMap = () => {\n    const ctx = this.myCanvas.current.getContext('2d');\n    for (let i = 0; i < myName.length; i++) {\n      buffer!.fillStyle = myName[i] === 1 ? this.getRandomColor() : '#000000';\n      buffer!.fillRect(\n        (i % columns) * size,\n        Math.floor(i / columns) * size,\n        size,\n        size,\n      );\n    }\n\n    ctx.drawImage(\n      buffer!.canvas,\n      0,\n      0,\n      buffer!.canvas.width,\n      buffer!.canvas.height,\n      0,\n      0,\n      this.myCanvas.current.width,\n      this.myCanvas.current.height,\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Game Development</h1>\n        <h2>Example</h2>\n        <canvas ref={this.myCanvas} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable react/no-unused-state */\n/* eslint-disable react/button-has-type */\n/* eslint-disable import/no-unresolved */\n/* eslint-disable import/extensions */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\n\nimport RunAndJump from './Run-And-Jump-Example/App';\nimport Collision from './Collision-Detection/App';\nimport TileMap from './Tilemap/App';\n\nimport './style.css';\n\ntype MyProps = {};\ntype MyState = {\n  showRunAndJump: boolean;\n  showCollision: boolean;\n  showOptions: boolean;\n  showTileMap: boolean;\n};\n\nclass Main extends React.Component<MyProps, MyState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      showOptions: true,\n      showRunAndJump: false,\n      showCollision: false,\n      showTileMap: false,\n    };\n  }\n\n  showRunAndJump = () => {\n    this.setState({ showRunAndJump: true });\n    this.setState({ showOptions: false });\n  };\n\n  showCollision = () => {\n    this.setState({ showCollision: true });\n    this.setState({ showOptions: false });\n    this.blockButtons();\n  };\n\n  showTileMap = () => {\n    this.setState({ showTileMap: true });\n    this.setState({ showOptions: false });\n    this.blockButtons();\n  };\n\n  blockButtons = () => {};\n\n  refreshPage = () => {\n    window.location.reload(false);\n  };\n\n  render(\n    { showOptions, showRunAndJump, showCollision, showTileMap } = this.state,\n  ) {\n    return (\n      <div className=\"main\">\n        <div className=\"showcase\">\n          {showRunAndJump && <RunAndJump />}\n          {showCollision && <Collision />}\n          {showTileMap && <TileMap />}\n        </div>\n        <div className=\"buttons\">\n          {!showOptions && (\n            <button onClick={this.refreshPage}>Reload page</button>\n          )}\n          {showOptions && (\n            <div>\n              <button onClick={this.showRunAndJump}>\n                Running and Jump Example\n              </button>\n\n              <button onClick={this.showCollision}>\n                Collision Detection example\n              </button>\n\n              <button onClick={this.showTileMap}>Show TileMap</button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/no-unresolved */\n/* eslint-disable import/extensions */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport Main from './Main';\n// import App from './Run-And-Jump-Example/App';\n// import App from './Collision-Detection/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}